[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "sv_survey"
description = "Tools to simulate and evaluate SV survey"
readme = "README.md"
license = { text = "GPL" }
classifiers = [
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
 ]
urls = {repository = "https://github.com/lsst-sims/sim_sv_survey" }
dynamic = [ "version" ]
dependencies = [
    "astroplan",
    "astropy",
    "ts-fbs-utils",
    "matplotlib",
    "numpy",
    "pandas",
    "rubin-nights",
    "rubin-scheduler",
    "rubin-sim",
    "schedview"
]

[project.optional-dependencies]
test = [
     "pytest",
     "black>=25",
     "ruff",
     "isort",
     "pytest-cov",
]
dev = [
  "documenteer[guide]",
]

[project.scripts]
fetch_sv_visits = "sv_survey.simulate_sv:fetch_sv_visits_cli"
make_sv_scheduler = "sv_survey.simulate_sv:make_sv_scheduler_cli"
make_model_observatory = "sv_survey.simulate_sv:make_model_observatory_cli"
make_band_scheduler = "sv_survey.simulate_sv:make_band_scheduler_cli"
run_sv_sim = "sv_survey.simulate_sv:run_sv_sim_cli"

[tool.setuptools.dynamic]
version = { attr = "setuptools_scm.get_version" }

[tool.setuptools.packages.find]
where = [ "" ]

[tool.pytest.ini_options]
addopts = "--ignore-glob=*/version.py --ignore-glob=*data_dir/*"

[tool.mypy]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"

[tool.black]
line-length = 110
target-version = ["py312"]

[tool.isort]
profile = "black"
line_length = 110

[tool.ruff]
exclude = [
    "__init__.py", "notebooks",
]
line-length = 110
target-version = "py312"

[tool.ruff.lint]
ignore = [
    "N802",
    "N803",
    "N806",
    "N812",
    "N815",
    "N816",
    "N999",
    "D107",
    "D105",
    "D102",
    "D104",
    "D100",
    "D200",
    "D205",
    "D400",
    "E712",
]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "N",  # pep8-naming
    "W",  # pycodestyle
]
extend-select = [
    "RUF100", # Warn about unused noqa
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 79

[tool.ruff.lint.pydocstyle]
convention = "numpy"
